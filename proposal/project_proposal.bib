
@online{HardwarePowerGlitch,
	title = {Hardware Power Glitch Attack (Fault Injection) - rhme2 Fiesta ({FI} 100) - {YouTube}},
	url = {https://www.youtube.com/watch?v=6Pf3pY3GxBM},
	urldate = {2021-10-15},
	file = {Hardware Power Glitch Attack (Fault Injection) - rhme2 Fiesta (FI 100) - YouTube:/home/jonty/Zotero/storage/9G3KFD9R/watch.html:text/html},
}

@video{liveoverflowHardwarePowerGlitch2017,
	title = {Hardware Power Glitch Attack (Fault Injection) - rhme2 Fiesta ({FI} 100)},
	url = {https://www.youtube.com/watch?v=6Pf3pY3GxBM},
	abstract = {We perform a fault injection on an arduino board to break out of a endless loop. We drop the power for a very short amount of time so the microprocessor calculates something wrong. Skip to 0:56 if you don't want to see my cringy acting.

The full verilog code: https://gist.github.com/{LiveOverflow}/...

-=[ üî¥ Stuff I use ]=-

‚Üí Microphone:* https://geni.us/ntg3b
‚Üí Graphics tablet:* https://geni.us/wacom-intuos
‚Üí Camera\#1 for streaming:* https://geni.us/sony-camera
‚Üí Lens for streaming:* https://geni.us/sony-lense
‚Üí Connect Camera\#1 to {PC}:* https://geni.us/cam-link
‚Üí Keyboard:* https://geni.us/mech-keyboard
‚Üí Old Microphone:* https://geni.us/mic-at2020usb

{US} Store Front:* https://www.amazon.com/shop/liveoverflow

-=[ ‚ù§Ô∏è Support ]=-

‚Üí per Video: https://www.patreon.com/join/liveover...
‚Üí per Month: https://www.youtube.com/channel/{UClcE}...

-=[ üêï Social ]=-

‚Üí Twitter: https://twitter.com/{LiveOverflow}/
‚Üí Website: https://liveoverflow.com/
‚Üí Subreddit: https://www.reddit.com/r/{LiveOverflow}/
‚Üí Facebook: https://www.facebook.com/{LiveOverflow}/

-=[ üìÑ P.S. ]=-

All links with "*" are affiliate links.
{LiveOverflow} / Security Flag {GmbH} is part of the Amazon Affiliate Partner Programm.

\#{CTF} \#{HardwareSecurity}},
	author = {{LiveOverflow}},
	urldate = {2021-10-15},
	date = {2017-06-16},
}

@video{theiacrShapingGlitchOptimizing2019,
	title = {Shaping the Glitch: Optimizing Voltage Fault Injection Attacks},
	url = {https://www.youtube.com/watch?v=nezzSxgMnZ8},
	shorttitle = {Shaping the Glitch},
	abstract = {Paper by Claudio Bozzato, Riccardo Focardi, Francesco Palmarini presented at Cryptographic Hardware and Embedded Systems Conference 2019
See https://iacr.org/cryptodb/data/paper....},
	author = {{TheIACR}},
	urldate = {2021-10-15},
	date = {2019-12-31},
}

@article{bozzatoShapingGlitchOptimizing2019,
	title = {Shaping the Glitch: Optimizing Voltage Fault Injection Attacks},
	rights = {Copyright (c) 2019 Claudio Bozzato, Riccardo Focardi, Francesco Palmarini},
	issn = {2569-2925},
	url = {https://tches.iacr.org/index.php/TCHES/article/view/7390},
	doi = {10.13154/tches.v2019.i2.199-224},
	shorttitle = {Shaping the Glitch},
	abstract = {Voltage fault injection is a powerful active side channel attack that modifies the execution-flow of a device by creating disturbances on the power supply line. The attack typically aims at skipping security checks or generating side-channels that gradually leak sensitive data, including the firmware code. In this paper we propose a new voltage fault injection technique that generates fully arbitrary voltage glitch waveforms using off-the-shelf and low cost equipment. To show the effectiveness of our setup, we present new, unpublished firmware extraction attacks on six microcontrollers from three major manufacturers: {STMicroelectronics}, Texas Instruments and Renesas Electronics that, in 2016 declared a market of \$1.5 billion, \$800 million and \$2.5 billion on units sold, respectively. Among the presented attacks, the most challenging ones exploit multiple vulnerabilities and inject over one million glitches, heavily leveraging on the performance and repeatability of the new proposed technique. We perform a thorough evaluation of arbitrary glitch waveforms by comparing the attack performance against two other major V-{FI} techniques in the literature. Along a responsible disclosure policy, all the vulnerabilities have been timely reported to the manufacturers.},
	pages = {199--224},
	journaltitle = {{IACR} Transactions on Cryptographic Hardware and Embedded Systems},
	author = {Bozzato, Claudio and Focardi, Riccardo and Palmarini, Francesco},
	urldate = {2021-10-15},
	date = {2019-02-28},
	langid = {english},
	keywords = {Microcontrollers},
	file = {Full Text PDF:/home/jonty/Zotero/storage/G8WCW3TC/Bozzato et al. - 2019 - Shaping the Glitch Optimizing Voltage Fault Injec.pdf:application/pdf},
}

@collection{francillonSmartCardResearch2014,
	location = {Cham},
	title = {Smart Card Research and Advanced Applications: 12th International Conference, {CARDIS} 2013, Berlin, Germany, November 27-29, 2013. Revised Selected Papers},
	volume = {8419},
	isbn = {978-3-319-08301-8 978-3-319-08302-5},
	url = {http://link.springer.com/10.1007/978-3-319-08302-5},
	series = {Lecture Notes in Computer Science},
	shorttitle = {Smart Card Research and Advanced Applications},
	abstract = {Fault analysis poses a serious threat to embedded security devices, especially smart cards. In particular, modeling faults and Ô¨Ånding eÔ¨Äective practical approaches that are also generic is considered to be of interest for smart card industry. In this work we propose a novel methodology to deal with a diÔ¨Écult question of choosing multiple parameters required for eÔ¨Äective faults. To this aim, we investigate several algorithms and Ô¨Ånd a new promising direction using evolutionary computation. Our experimental results on some of the smart cards used today show the potential of this new approach. Our best algorithm is a tailored search strategy especially developed for the purpose of Ô¨Ånding the best choice of parameters for glitching. With this approach we found some of oÔ¨Ä-the-shelf devices, although secured against this type of attacks, still vulnerable.},
	publisher = {Springer International Publishing},
	editor = {Francillon, Aur√©lien and Rohatgi, Pankaj},
	urldate = {2021-10-15},
	date = {2014},
	langid = {english},
	doi = {10.1007/978-3-319-08302-5},
	file = {Francillon and Rohatgi - 2014 - Smart Card Research and Advanced Applications 12t.pdf:/home/jonty/Zotero/storage/ME4PQN38/Francillon and Rohatgi - 2014 - Smart Card Research and Advanced Applications 12t.pdf:application/pdf},
}

@online{IEEEXploreFullText,
	title = {{IEEE} Xplore Full-Text {PDF}:},
	url = {https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=9528853&tag=1},
	urldate = {2021-10-15},
	file = {IEEE Xplore Full-Text PDF\::/home/jonty/Zotero/storage/FNJ4TMK6/stamp.html:text/html},
}

@article{gaiAttackingEdgeofThingsPhysical2021,
	title = {Attacking the Edge-of-Things: A Physical Attack Perspective},
	issn = {2327-4662},
	doi = {10.1109/JIOT.2021.3109917},
	shorttitle = {Attacking the Edge-of-Things},
	abstract = {The concepts between Internet of Things ({IoT}) and edge computing are increasingly intertwined, as an edge computing architecture generally comprises a (large) number of diverse {IoT} devices. This, however, increases the potential attack vectors since any one of these connected {IoT} devices can be targeted to facilitate other malicious cyber activities. Physical attacks are generally harder to mitigate and less studied, in comparison to their cyber counterparts. Thus, in this paper we present an attack framework targeting true random number generators ({TRNGs}), which are a key component in cryptosystems for edge devices. We then demonstrate how such a framework can guide our investigation of a commercial {ASIC} chip that runs ring-oscillator-based {TRNG}. Specifically, we show that our template power attack, low voltage fault attack, and voltage glitch fault attack do not require prior knowledge of the {TRNG} implementation.},
	pages = {1--1},
	journaltitle = {{IEEE} Internet of Things Journal},
	author = {Gai, Keke and Ding, Yaoling and Wang, An and Zhu, Liehuang and Choo, Kim-Kwang Raymond and Zhang, Qi and Wang, Zhuping},
	date = {2021},
	note = {Conference Name: {IEEE} Internet of Things Journal},
	keywords = {Circuit faults, Cloud computing, edge computing, fault analysis, Generators, Hardware, Internet of Things, Low voltage, Physical attacks, power analysis., Resists, true random number generators},
	file = {IEEE Xplore Full Text PDF:/home/jonty/Zotero/storage/HQQPDYTX/Gai et al. - 2021 - Attacking the Edge-of-Things A Physical Attack Pe.pdf:application/pdf;IEEE Xplore Abstract Record:/home/jonty/Zotero/storage/98TNBZPY/9528853.html:text/html},
}

@online{limitedresultsNRF52DebugResurrection2020,
	title = {{nRF}52 Debug Resurrection ({APPROTECT} Bypass) Part 1},
	url = {https://limitedresults.com/2020/06/nrf52-debug-resurrection-approtect-bypass/},
	abstract = {Yes, resurrection of {JTAG}/{SWD} interface on protected platforms has always been a sensitive topic in embedded security. This security investigation},
	titleaddon = {{LimitedResults}},
	author = {{LimitedResults}},
	urldate = {2021-10-15},
	date = {2020-06-10},
	langid = {american},
	file = {Snapshot:/home/jonty/Zotero/storage/SQZYFLG4/nrf52-debug-resurrection-approtect-bypass.html:text/html},
}

@online{PocketGlitcher2021,
	title = {The {PocketGlitcher}},
	url = {https://limitedresults.com/2021/03/the-pocketglitcher/},
	abstract = {This blogpost presents a modding system, called {PocketGlicher}. It provides an automated way to perform voltage glitching, without any expensive electronic},
	titleaddon = {{LimitedResults}},
	urldate = {2021-10-15},
	date = {2021-03-14},
	langid = {american},
	file = {Snapshot:/home/jonty/Zotero/storage/UBKHV79I/the-pocketglitcher.html:text/html},
}

@online{DavidoswaldGiantrevBGIAnT,
	title = {david-oswald/giant-{revB}: The {GIAnT} fault injection board in the new revision},
	url = {https://github.com/david-oswald/giant-revB},
	shorttitle = {david-oswald/giant-{revB}},
	abstract = {The {GIAnT} fault injection board in the new revision - david-oswald/giant-{revB}: The {GIAnT} fault injection board in the new revision},
	titleaddon = {{GitHub}},
	urldate = {2021-10-15},
	langid = {english},
	file = {Snapshot:/home/jonty/Zotero/storage/MM93Y5LH/giant-revB.html:text/html},
}

@software{melchingAirtagDumper2021,
	title = {Airtag dumper},
	rights = {{MIT}},
	url = {https://github.com/pd0wm/airtag-dump},
	abstract = {Utility to glitch and dump an {AirTag}},
	author = {Melching, Willem},
	urldate = {2021-10-15},
	date = {2021-10-13},
	note = {original-date: 2021-05-16T16:27:40Z},
}

@online{StacksmashingAirtagglitcher,
	title = {stacksmashing/airtag-glitcher},
	url = {https://github.com/stacksmashing/airtag-glitcher},
	abstract = {Contribute to stacksmashing/airtag-glitcher development by creating an account on {GitHub}.},
	titleaddon = {{GitHub}},
	urldate = {2021-10-15},
	langid = {english},
	file = {Snapshot:/home/jonty/Zotero/storage/GX7UDT4D/airtag-glitcher.html:text/html},
}

@online{DavidoswaldGiantrevBGIAnTa,
	title = {david-oswald/giant-{revB}: The {GIAnT} fault injection board in the new revision},
	url = {https://github.com/david-oswald/giant-revB},
	shorttitle = {david-oswald/giant-{revB}},
	abstract = {The {GIAnT} fault injection board in the new revision - david-oswald/giant-{revB}: The {GIAnT} fault injection board in the new revision},
	titleaddon = {{GitHub}},
	urldate = {2021-10-15},
	langid = {english},
	file = {Snapshot:/home/jonty/Zotero/storage/8PI2D2UR/giant-revB.html:text/html},
}

@software{rothAirtagglitcher2021,
	title = {airtag-glitcher},
	url = {https://github.com/stacksmashing/airtag-glitcher},
	publisher = {stacksmashing},
	author = {Roth, Thomas},
	urldate = {2021-10-15},
	date = {2021-09-22},
	note = {original-date: 2021-08-07T12:38:49Z},
}

@online{oswaldGiantrevBGIAnTFault,
	title = {giant-{revB}: The {GIAnT} fault injection board in the new revision},
	url = {https://github.com/david-oswald/giant-revB},
	shorttitle = {david-oswald/giant-{revB}},
	abstract = {The {GIAnT} fault injection board in the new revision - david-oswald/giant-{revB}: The {GIAnT} fault injection board in the new revision},
	titleaddon = {{GitHub}},
	author = {Oswald, David},
	urldate = {2021-10-15},
	langid = {english},
	file = {Snapshot:/home/jonty/Zotero/storage/4C9BMYQS/giant-revB.html:text/html},
}

@online{DigitalTechnologySolutions,
	title = {Digital and technology solutions professional (integrated degree)},
	url = {https://www.instituteforapprenticeships.org/apprenticeship-standards/digital-and-technology-solutions-professional-(integrated-degree)-v1-1},
	titleaddon = {Institute for Apprenticeships and Technical Education},
	urldate = {2021-10-15},
	langid = {english},
	file = {Snapshot:/home/jonty/Zotero/storage/Z5WN2VP6/digital-and-technology-solutions-professional-(integrated-degree)-v1-1.html:text/html},
}

@video{rothHowAppleAirTags2021,
	title = {How the Apple {AirTags} were hacked},
	url = {https://www.youtube.com/watch?v=_E0PWQvW-14},
	abstract = {On Saturday, I managed to dump the firmware of the newly released Apple {AirTags} - and in this video I'll show how I did it.

I won't share firmware dumps or so, so please don't ask :)

Links:
- Colin on Twitter: http://twitter.com/colinoflynn
- Colin on {YouTube}: https://www.youtube.com/channel/{UCqc}9...
- Colin's company: https://www.newae.com
- {LimitedResults} Appprotect bypass: https://limitedresults.com/2020/06/nr...
- {LimitedResults} Pocketglitcher: https://limitedresults.com/2021/03/th...

My links:
- Twitter: https://twitter.com/ghidraninja
- Patreon: https://patreon.com/stacksmashing
- Pico Debug'n'Dump board: https://gum.co/picodnd

Timestamps:

00:00 Intro
00:10 {AirTags} hardware
01:40 Debugging interface
02:35 Fault-Injection
04:30 Glitching the {AirTags}
05:50 Hardware Setup
07:10 Lets Glitch
07:56 Firmware modification},
	author = {Roth, Thomas},
	urldate = {2021-10-15},
	date = {2021-05-11},
}

@online{rothPicoDebugDump,
	title = {Pico Debug‚Äôn‚ÄôDump},
	url = {https://pdnd.stacksmashing.net/},
	titleaddon = {Pico Debug‚Äôn‚ÄôDump},
	author = {Roth, Thomas},
	urldate = {2021-10-15},
	langid = {english},
	file = {Snapshot:/home/jonty/Zotero/storage/ETXCJ2ZI/pdnd.stacksmashing.net.html:text/html},
}

@article{vandenherrewegenFillYourBoots2020,
	title = {Fill your Boots: Enhanced Embedded Bootloader Exploits via Fault Injection and Binary Analysis},
	issn = {2569-2925},
	url = {https://tches.iacr.org/index.php/TCHES/article/view/8727},
	doi = {10.46586/tches.v2021.i1.56-81},
	shorttitle = {Fill your Boots},
	abstract = {The bootloader of an embedded microcontroller is responsible for guarding the device‚Äôs internal (Ô¨Çash) memory, enforcing read/write protection mechanisms. Fault injection techniques such as voltage or clock glitching have been proven successful in bypassing such protection for speciÔ¨Åc microcontrollers, but this often requires expensive equipment and/or exhaustive search of the fault parameters. When multiple glitches are required (e.g., when countermeasures are in place) this search becomes of exponential complexity and thus infeasible. Another challenge which makes embedded bootloaders notoriously hard to analyse is their lack of debugging capabilities.},
	pages = {56--81},
	journaltitle = {{IACR} Transactions on Cryptographic Hardware and Embedded Systems},
	shortjournal = {{TCHES}},
	author = {Van den Herrewegen, Jan and Oswald, David and Garcia, Flavio D. and Temeiza, Qais},
	urldate = {2021-10-15},
	date = {2020-12-03},
	langid = {english},
	file = {Van den Herrewegen et al. - 2020 - Fill your Boots Enhanced Embedded Bootloader Expl.pdf:/home/jonty/Zotero/storage/7ZKSQE4U/Van den Herrewegen et al. - 2020 - Fill your Boots Enhanced Embedded Bootloader Expl.pdf:application/pdf},
}